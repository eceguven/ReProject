version: '3.7'

services:
  # rabbitmq:
  #   container_name: rabbitmq
  #   image: rabbitmq:3.8.11-management-alpine
  #   ports:
  #     - "15672:15672"
  #     - "5672:5672"
  #   networks:
  #     - app-network
      
  redis:
    container_name: redis
    image: redis:6.0.10-alpine
    ports:
      - "6379:6379"
    networks:
      - app-network
      
  # elasticsearch:
  #   container_name: elasticsearch
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.13.3
  #   environment:
  #     - xpack.monitoring.enabled=true
  #     - xpack.watcher.enabled=false
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - discovery.type=single-node
  #   ports:
  #     - "9200:9200"
  #   volumes:
  #     - esdata:/usr/share/elasticsearch/data
  #   networks:
  #     - app-network
      
  # kibana:
  #   container_name: kibana
  #   image: docker.elastic.co/kibana/kibana:7.13.3
  #   environment:
  #     - ELASTICSEARCH_URL=http://host.docker.internal:9200
  #   ports: 
  #     - "5601:5601"
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - app-network
    
  sql-server-db:
    container_name: sql-server-db
    image: mcr.microsoft.com/mssql/server
    ports:
      - "1434:1433"
    environment:
      SA_PASSWORD: "myPassw0rd"
      ACCEPT_EULA: "Y"
    volumes:
      - sqldata:/var/opt/mssql
    networks:
      - app-network
 
  # grafana:
  #   container_name: grafana
  #   image: grafana/grafana
  #   volumes:
  #     - ../grafana/storage:/var/lib/grafana
  #   networks:
  #     - app-network
      
  # prometheus:
  #   container_name: prometheus
  #   image: prom/prometheus
  #   volumes:
  #     - ../prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - ../prometheus/storage:/prometheus
  #   networks:
  #     - app-network

  # postgres-db:
  #   container_name: postgres-db
  #   image: postgres:latest
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_PASSWORD=myPassw0rd
  #     - POSTGRES_USER=admin
  #   volumes:
  #     - postgres_data:/var/opt/postgres
  #   networks: 
  #     - app-network
  
  # pgadmin:
  #   container_name: pgadmin_container
  #   image: dpage/pgadmin4:latest
  #   environment:
  #       PGADMIN_DEFAULT_EMAIL: 'admin@email.com'
  #       PGADMIN_DEFAULT_PASSWORD: 'admin'
  #   ports:
  #     - 5050:80   
  #   volumes:
  #     - pgadmin_data:/var/lib/pgadmin
  #   networks: 
  #     - app-network   

volumes:
  # esdata:
  sqldata:
  postgres_data:
  # pgadmin_data:
       
networks:
  app-network:
    external: true